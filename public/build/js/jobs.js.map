{"version":3,"sources":["jobs.js"],"names":[],"mappingsfile":"jobs.js","sourcesContent":["$(document).ready(function() {\n\n    var APPLICATION_ID = 'PUT_ID_HERE'; // Your app id\n    var SEARCH_ONLY_API_KEY = 'PUT_KEY_HERE'; // Please insert you own key\n    var INDEX_NAME = 'jobs_production';\n    var PARAMS = {\n        hitsPerPage: 10000,\n    };\n\n    var algolia = algoliasearch(APPLICATION_ID, SEARCH_ONLY_API_KEY);\n    var algoliaHelper = algoliasearchHelper(algolia, INDEX_NAME, PARAMS);\n\n    $searchInput = $('#search-input');\n    $searchInputIcon = $('#search-input-icon');\n    $main = $('main');\n    $hits = $('#hits');\n    $pagination = $('#pagination');\n\n    var hitTemplate = Hogan.compile($('#hit-template').text());\n    var paginationTemplate = Hogan.compile($('#pagination-template').text());\n    var noResultsTemplate = Hogan.compile($('#no-results-template').text());\n\n    $searchInput\n        .on('keyup', function() {\n            var query = $(this).val();\n            toggleIconEmptyInput(query);\n            algoliaHelper.setQuery(query).search();\n        })\n        .focus();\n\n    algoliaHelper.on('error', function(error) {\n        console.log(error);\n    });\n\n    algoliaHelper.on('change', function(state) {\n        setURLParams();\n    });\n\n    algoliaHelper.on('result', function(content, state) {\n        renderHits(content);\n        handleNoResults(content);\n        renderPagination(content);\n    });\n\n    initFromURLParams();\n    algoliaHelper.search();\n\n\n    function renderHits(content) {\n        $hits.html(hitTemplate.render(content));\n    }\n\n    function handleNoResults(content) {\n        if (content.nbHits > 0) {\n            $main.removeClass('no-results');\n            return;\n        }\n        $main.addClass('no-results');\n        $hits.html(noResultsTemplate.render({query: content.query}));\n    }\n\n    function renderPagination(content) {\n        var pages = [];\n        if (content.page > 3) {\n            pages.push({current: false, number: 1});\n            pages.push({current: false, number: '...', disabled: true});\n        }\n        for (var p = content.page - 3; p < content.page + 3; ++p) {\n            if (p < 0 || p >= content.nbPages) continue;\n            pages.push({current: content.page === p, number: p + 1});\n        }\n        if (content.page + 3 < content.nbPages) {\n            pages.push({current: false, number: '...', disabled: true});\n            pages.push({current: false, number: content.nbPages});\n        }\n        var pagination = {\n            pages: pages,\n            prev_page: content.page > 0 ? content.page : false,\n            next_page: content.page + 1 < content.nbPages ? content.page + 2 : false\n        };\n        $pagination.html(paginationTemplate.render(pagination));\n    }\n\n\n\n    $(document).on('click', '.toggle-refine', function(e) {\n        e.preventDefault();\n        algoliaHelper.toggleRefine($(this).data('facet'), $(this).data('value')).search();\n    });\n    $(document).on('click', '.go-to-page', function(e) {\n        e.preventDefault();\n        $('html, body').animate({scrollTop: 0}, '500', 'swing');\n        algoliaHelper.setCurrentPage(+$(this).data('page') - 1).search();\n    });\n    $searchInputIcon.on('click', function(e) {\n        e.preventDefault();\n        $searchInput.val('').keyup().focus();\n    });\n    $(document).on('click', '.remove-numeric-refine', function(e) {\n        e.preventDefault();\n        algoliaHelper.removeNumericRefinement($(this).data('facet'), $(this).data('value')).search();\n    });\n    $(document).on('click', '.clear-all', function(e) {\n        e.preventDefault();\n        $searchInput.val('').focus();\n        algoliaHelper.setQuery('').clearRefinements().search();\n    });\n\n\n    function initFromURLParams() {\n        var URLString = window.location.search.slice(1);\n        var URLParams = algoliasearchHelper.url.getStateFromQueryString(URLString);\n        if (URLParams.query) $searchInput.val(URLParams.query);\n        if (URLParams.index) $sortBySelect.val(URLParams.index.replace(INDEX_NAME, ''));\n        algoliaHelper.overrideStateWithoutTriggeringChangeEvent(algoliaHelper.state.setQueryParameters(URLParams));\n    }\n\n    var URLHistoryTimer = Date.now();\n    var URLHistoryThreshold = 700;\n    function setURLParams() {\n        var trackedParameters = ['attribute:*'];\n        if (algoliaHelper.state.query.trim() !== '')  trackedParameters.push('query');\n        if (algoliaHelper.state.page !== 0)           trackedParameters.push('page');\n        if (algoliaHelper.state.index !== INDEX_NAME) trackedParameters.push('index');\n\n        var URLParams = window.location.search.slice(1);\n        var nonAlgoliaURLParams = algoliasearchHelper.url.getUnrecognizedParametersInQueryString(URLParams);\n        var nonAlgoliaURLHash = window.location.hash;\n        var helperParams = algoliaHelper.getStateAsQueryString({filters: trackedParameters, moreAttributes: nonAlgoliaURLParams});\n        if (URLParams === helperParams) return;\n\n        var now = Date.now();\n        if (URLHistoryTimer > now) {\n            window.history.replaceState(null, '', '?' + helperParams + nonAlgoliaURLHash);\n        } else {\n            window.history.pushState(null, '', '?' + helperParams + nonAlgoliaURLHash);\n        }\n        URLHistoryTimer = now+URLHistoryThreshold;\n    }\n\n    window.addEventListener('popstate', function() {\n        initFromURLParams();\n        algoliaHelper.search();\n    });\n\n    function toggleIconEmptyInput(query) {\n        $searchInputIcon.toggleClass('empty', query.trim() !== '');\n    }\n\n\n});"],"sourceRoot":"/source/"}